FROM node:alpine AS builder
RUN apk update && apk add --no-cache python3 py3-pip libc6-compat
WORKDIR /app

ARG NODE_ENV=production
ARG APP_ENV

ENV SERVICE_PATH=apps/api

# Install package manager
RUN --mount=type=cache,id=pnpm-store,target=/root/.pnpm-store \
    npm install --global --no-update-notifier --no-fund turbo pnpm
COPY . .
RUN pnpm turbo prune --scope=api --docker

# Get all dependencies and install
FROM builder AS installer
WORKDIR /app

# We need it to install dev dependencies such as TS
ENV NODE_ENV=development

# First install the dependencies (as they change less often)
COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=builder /app/out/pnpm-workspace.yaml ./pnpm-workspace.yaml

RUN --mount=type=cache,id=pnpm-store,target=/root/.pnpm-store \
    pnpm install --frozen-lockfile --filter ./${SERVICE_PATH}

# Build the project
COPY --from=builder /app/out/full/ .
COPY turbo.json turbo.json

ENV NODE_ENV=$NODE_ENV
ENV APP_ENV=$APP_ENV

RUN pnpm turbo run build --filter=api...

FROM installer AS development
CMD turbo run dev --scope=api

FROM node:alpine AS runner
WORKDIR /app

# # Don't run production as root
RUN addgroup --system --gid 1001 app
RUN adduser --system --uid 1001 app
USER app
COPY --from=installer /app .

EXPOSE 3001

CMD ["node", "apps/api/dist/src/app.js"]
